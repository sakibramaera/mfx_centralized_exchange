make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0

# Make data base, printed on Fri Feb 14 14:55:40 2025

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
VSCODE_CRASH_REPORTER_PROCESS_TYPE = extensionHost
# environment
NVM_INC = /Users/apple/.nvm/versions/node/v20.9.0/include/node
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /Users/apple/Desktop/metaflowx/mfx_centralized_exchange
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"en-in","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/bin/make
# makefile (from `Makefile', line 2)
ACTIX_PACKAGE = --package actix-blog-rs
# makefile (from `Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# makefile (from `Makefile', line 3)
ACTIX_DEPENDENCIES_WITH_FEATURES = actix-web actix-cors serde_json dotenvy lazy_static
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# environment
VSCODE_CWD = /
# makefile (from `Makefile', line 12)
AXUM_DEPENDENCIES_WITH_FEATURES = env_logger dotenvy lazy_static axum tokio=full
# environment
PATH = /Users/apple/.nvm/versions/node/v20.9.0/bin:/opt/homebrew/bin:/Users/apple/.bun/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/apple/.foundry/bin
# makefile (from `Makefile', line 11)
AXUM_PACKAGE = --package axum-blog-rs
# environment
NVM_BIN = /Users/apple/.nvm/versions/node/v20.9.0/bin
# environment
ELECTRON_RUN_AS_NODE = 1
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.vZFGDBZSn4/Listeners
# automatic
%F = $(notdir $%)
# environment
PWD = /Users/apple/Desktop/metaflowx/mfx_centralized_exchange
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /Users/apple
# default
MAKEFILEPATH = $(shell /usr/bin/xcode-select -print-path 2>/dev/null || echo /Developer)/Makefiles
# environment
VSCODE_CODE_CACHE_PATH = /Users/apple/Library/Application Support/Code/CachedData/5e805b79fcb6ba4c2d23712967df89a089da575b
# environment
LOGNAME = apple
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# environment
NVM_CD_FLAGS = -q
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
XPC_FLAGS = 0x0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 1
# default
MAKE_VERSION := 3.81
# environment
USER = apple
# makefile
.DEFAULT_GOAL := install
# automatic
%D = $(patsubst %/,%,$(dir $%))
# default
MAKE_COMMAND := /Library/Developer/CommandLineTools/usr/bin/make
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/lm/zjh988ms6nbcwf3bsp39n_200000gn/T/
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /Users/apple/Library/Application Support/Code/1.76-main.sock
# environment
MallocNanoZone = 0
# environment
BUN_INSTALL = /Users/apple/.bun
# makefile
MAKEFLAGS = Rrqp
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
NVM_DIR = /Users/apple/.nvm
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.12887764645.12887764651
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0x0:0x0
# environment
COMMAND_MODE = unix2003
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
LC_ALL = C
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# makefile (from `Makefile', line 21)
GRPC_ACTIX_WITH_FEATURES = actix-web actix-cors serde_json env_logger dotenvy lazy_static tonic tokio=full prost 
# default
.INCLUDE_DIRS = /usr/local/include
# environment
MAKELEVEL := 0
# environment
LANG = C
# environment
VSCODE_PID = 2306
# variable set hash-table stats:
# Load=69/1024=7%, Rehash=0, Collisions=2/93=2%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777220, inode 12953713881): 9 files, no impossibilities.

# 9 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

install_grpc_actix:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 44):
	@echo 'grpc_actix dependencies starting to install.....'
	@for item in $(GRPC_ACTIX_WITH_FEATURES); do \
	dep_name=$$(echo $$item | cut -d'=' -f1); \
	features=$$(echo $$item | cut -d'=' -f2); \
	if [ -n "$$features" ] && [ "$$features" != "$$dep_name" ]; then \
	echo "Adding $$dep_name with features: $$features"; \
	cargo add $$dep_name --features $$features; \
	else \
	echo "Adding $$dep_name without features"; \
	cargo add $$dep_name; \
	fi; \
	done
	@echo 'actix dependencies installed successfully'
	

build-actix:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 128):
	@cargo build --package actix-blog-rs
	

migrate-up:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 119):
	sqlx migrate run
	

create_migrations:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 116):
	sqlx migrate add -r init
	

migrate-down:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 122):
	sqlx migrate revert
	

install-axum:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 75):
	@echo 'axum dependencies starting to install.....'
	@for item in $(AXUM_DEPENDENCIES_WITH_FEATURES); do \
	dep_name=$$(echo $$item | cut -d'=' -f1); \
	features=$$(echo $$item | cut -d'=' -f2); \
	if [ -n "$$features" ] && [ "$$features" != "$$dep_name" ]; then \
	echo "Adding $$dep_name with features: $$features"; \
	cargo add $$dep_name --features $$features $(AXUM_PACKAGE); \
	else \
	echo "Adding $$dep_name without features"; \
	cargo add $$dep_name $(AXUM_PACKAGE); \
	fi; \
	done
	@echo 'axum dependencies installed successfully'
	

install_monorepo: install-actix install-axum
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 40):
	@cargo install sqlx-cli
	

# Not a target:
all:
#  Command-line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

.PHONY: run-require-containers postgres-docker redis-docker remove-all-containers remove-docker-all-images
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

run-require-containers: postgres-docker redis-docker
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

remove-docker-all-containers:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 107):
	@echo "Running..."
	@docker rm $$(docker ps -aq) -f
	

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2025-02-14 14:50:23
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

 
make: *** No rule to make target `all'.  Stop.

run-actix:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 138):
	@cargo run --package actix-blog-rs
	

postgres-docker:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 97):
	@echo "Running..."
	@docker-compose -f docker-compose/services/docker-compose-postgres.yml up -d
	

redis-docker:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 102):
	@echo "Running..."
	@docker-compose -f docker-compose/services/docker-compose-redis.yml up -d
	

build-axum:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 131):
	@cargo build --package axum-blog-rs
	

remove-docker-all-images:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 112):
	@echo "Running..."
	@docker rmi $$(docker images -aq) -f
	

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

install-actix:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 59):
	@echo 'actix dependencies starting to install.....'
	@for item in $(ACTIX_DEPENDENCIES_WITH_FEATURES); do \
	dep_name=$$(echo $$item | cut -d'=' -f1); \
	features=$$(echo $$item | cut -d'=' -f2); \
	if [ -n "$$features" ] && [ "$$features" != "$$dep_name" ]; then \
	echo "Adding $$dep_name with features: $$features"; \
	cargo add $$dep_name --features $$features $(ACTIX_PACKAGE); \
	else \
	echo "Adding $$dep_name without features"; \
	cargo add $$dep_name $(ACTIX_PACKAGE); \
	fi; \
	done
	@echo 'actix dependencies installed successfully'
	

run-axum:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 141):
	@cargo run --package axum-blog-rs
	

remove-all-containers:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

install: install_grpc_actix
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 36):
	@cargo install sqlx-cli
	

# files hash-table stats:
# Load=23/1024=2%, Rehash=0, Collisions=0/49=0%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 1
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 4087 / max = 4087 / min = 4087 / avg = 4087

# Finished Make data base on Fri Feb 14 14:55:40 2025

 
